inserting i in symtab and its address = 0
inserting j in symtab and its address = 1
Valid assignment
j
inserting c in symtab and its address = 0
c
Comment at line 21
Comment at line 22
Comment at line 23
Comment at line 24
Comment at line 25
Comment at line 26
Comment at line 27
Comment at line 28
Comment at line 29
Comment at line 30
Comment at line 31
Comment at line 33
j
Comment at line 41
Comment at line 42
Comment at line 43
Comment at line 44
Comment at line 45
Comment at line 46
Comment at line 47
Comment at line 48
Comment at line 49
Comment at line 50
Comment at line 52
Comment at line 53
Comment at line 54
Comment at line 55
Comment at line 56
Comment at line 57
Comment at line 58
Comment at line 59
Comment at line 60
Parsing finished!

-----------Sym Table------------
Name: c, Type: 1, Address: 0
Name: j, Type: 1, Address: 1
Name: i, Type: 1, Address: 0
  0: start              -1
  1: ld_int_value       10
  2: store               0
  3: ld_int_value       20
  4: store               1
  5: ld_int             40
  6: store               0
  7: label               1
  8: ld_var              1
  9: ld_var              0
 10: lt                 -1
 11: jmp_false           2
 12: ld_var              1
 13: ld_int             35
 14: eqn                -1
 15: jmp_false           3
 16: write_int           1
 17: goto                4
 18: label               3
 19: write_int           1
 20: label               4
 21: ld_var              1
 22: ld_int              1
 23: add                -1
 24: store               1
 25: goto                1
 26: label               2
 27: ld_int_value        0
 28: store               0
 29: label               5
 30: ld_var              0
 31: ld_int             20
 32: lt                 -1
 33: jmp_false           6
 34: write_int           1
 35: ld_var              0
 36: ld_int              1
 37: add                -1
 38: store               0
 39: goto                5
 40: label               6
 41: label               7
 42: write_int           1
 43: ld_var              1
 44: ld_int              1
 45: add                -1
 46: store               1
 47: ld_var              1
 48: ld_int             38
 49: lten               -1
 50: jmp_false           8
 51: goto                7
 52: label               8
 53: halt               -1

#start
.text
.globl main
main:
addiu $t7, $sp, 640

#ld_int_value
li $a0, 10

#store
sw $a0, 0($t7)

#ld_int_value
li $a0, 20

#store
sw $a0, 16($t7)

#ld_int
li $a0, 40
sw $a0, 0($sp)
addiu $sp, $sp, 16


#store
sw $a0, 0($t7)

#label
LABEL1:


#ld_var
lw $a0, 16($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_var
lw $a0, 0($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#lt
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
slt $a0,$t1,$a0
addiu $sp, $sp, 16


#jmp_false
beq $a0, 0 , LABEL2

#ld_var
lw $a0, 16($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_int
li $a0, 35
sw $a0, 0($sp)
addiu $sp, $sp, 16


#eqn
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
seq $a0,$a0,$t1
addiu $sp, $sp, 16


#jmp_false
beq $a0, 0 , LABEL3

#write_int
lw $a0, 16($t7)
li $v0, 1
move $t0, $a0
syscall

#goto
j LABEL4


#label
LABEL3:


#write_int
lw $a0, 16($t7)
li $v0, 1
move $t0, $a0
syscall

#label
LABEL4:


#ld_var
lw $a0, 16($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_int
li $a0, 1
sw $a0, 0($sp)
addiu $sp, $sp, 16


#add
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
add $a0, $t1, $a0
sw $a0, 0($sp)
addiu $sp, $sp, 16


#store
sw $a0, 16($t7)

#goto
j LABEL1


#label
LABEL2:


#ld_int_value
li $a0, 0

#store
sw $a0, 0($t7)

#label
LABEL5:


#ld_var
lw $a0, 0($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_int
li $a0, 20
sw $a0, 0($sp)
addiu $sp, $sp, 16


#lt
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
slt $a0,$t1,$a0
addiu $sp, $sp, 16


#jmp_false
beq $a0, 0 , LABEL6

#write_int
lw $a0, 16($t7)
li $v0, 1
move $t0, $a0
syscall

#ld_var
lw $a0, 0($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_int
li $a0, 1
sw $a0, 0($sp)
addiu $sp, $sp, 16


#add
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
add $a0, $t1, $a0
sw $a0, 0($sp)
addiu $sp, $sp, 16


#store
sw $a0, 0($t7)

#goto
j LABEL5


#label
LABEL6:


#label
LABEL7:


#write_int
lw $a0, 16($t7)
li $v0, 1
move $t0, $a0
syscall

#ld_var
lw $a0, 16($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_int
li $a0, 1
sw $a0, 0($sp)
addiu $sp, $sp, 16


#add
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
add $a0, $t1, $a0
sw $a0, 0($sp)
addiu $sp, $sp, 16


#store
sw $a0, 16($t7)

#ld_var
lw $a0, 16($t7)
sw $a0, 0($sp)
addiu $sp, $sp, 16


#ld_int
li $a0, 38
sw $a0, 0($sp)
addiu $sp, $sp, 16


#lten
addiu $sp, $sp, -16
lw $a0, 0($sp)
addiu $sp, $sp, -16
lw $t1, 0($sp)
sle $a0,$t1,$a0
addiu $sp, $sp, 16


#jmp_false
beq $a0, 0 , LABEL8

#goto
j LABEL7


#label
LABEL8:


#halt
li $v0, 10
syscall
